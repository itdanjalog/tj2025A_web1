[ 통신 ]
	1. 통신이란 ? 매체를 사용하여 정보를 서로 주고 받는 과정/행위
	2. 사용처 : 전화, 카톡 , 우편, 전신 , 웹페이지 등등
		-> www.naver.com 네이버 접속하는것도 일종의 통신
	3. 서로 주고 받는 과정 : request(요청) , response(응답)

[ 인터넷 ]
	1. 인터넷이란 ? 컴퓨터로 연결하여 통신 프로토콜을 이용해 정보를 주고받는 과정
	2. 연결방법 : 무선(WIFI), 유선(LAN)

[네트워크]
	1. 네트워크 이란? 인터넷을 통해 연결된 구조에서 다양한 정보를 주고 받는 과정
	2. 특징 : 1.글로벌 연결성 2.분산 구조 3.다양한서비스 4.*프토토콜*
	3. 구성요소
		1. 네트워크 인프라 : 케이블, 라우터 , 위성, 모뎀 등등 물리적인 장치 나 연결매체가 필요하다.
		2. *프로토콜* : 데이터 통신을 가능하게 하는 규칙/규약/약속 절차
		3. 서버 : 데이터를 제공하는 컴퓨터 				ex] 아파치톰캣10.1(웹서버) , MYSQLserver(DB서버)
		4. 클라이언트 : 데이터를 요청하고 제공받는 컴퓨터 	ex] 일반인(브라우저=크롬/엣지/사파리)
			- 강의기준 : PC 1대로 개발자PC 이면서 서버PC 이면서 일반인입장의 테스트PC

[ 프로토콜 ]
	1. 프로토콜 이란 ? 네트워크에서 데이터를 통신하기 위한 규칙 및 절차 ex] 원할한 (전세계 공용) 사회를 위해 (신호등) 법/규칙 ,
		ex] 도로명 체계 , 전화번호 체계 : 내가 땅 사면 내 마음대로 땅 주소 체계 를 만들수 없다.
	2. 주요 프로토콜
		1. IP
			1. Internet Protocol : 네트워크를 사용하는 컴퓨터간의 식별 번호
			2. ip 주소체계 형태 :
				1. 0~255 사이 숫자로 4자리를 가지는 구조 , ipv4 , 192.168.30.9
					1. 내 ip찾기 : 1. https://ip.pe.kr/ 2. 윈도우->cmd-> ipconfig 3. 제어판 -> 네트워크
					2. 비공개용 ip : 1. localhost 2. 127.0.0.1
						http://localhost:8080/tj2024b_web1/day01/example1
						http://127.0.0.1:8080/tj2024b_web1/day01/example1
					2. 공개용 ip : 192.168.40.25	, 강의기준 : 학원내 public ip 이므로 학원내에서 가능 , 사설PC/클라우드:AWS,카페24 등등
						http://192.168.40.25:8080/tj2024b_web1/day01/example1
			3. 예]
				강사의 PC에 접속하고 싶어 : 192.168.40.25
				강사의 집에 접속하고 싶어 : 인천광역시 부평구 00동 00번지
		2. PORT : 네트워크 1대 컴퓨터 안에서 프로그램(프로세스)를 식별 하는 번호
			1. 체계 : 0 ~ 65535 사이로 사용, 16bit
			2. 주요 port :
				FTP 20/21
				HTTP 80/8080
				DNS : 53
				사설 PORT : 1000~5000 으로 아무거나 사용. (중복불가능)
					1. MYSQL : 3306 2. 톰캣 ADMIN PORT : 8081(아무거나)
				* PORT 강제 종료( 프로세스 강제 종료 )
					1. port 확인 : 윈도우 -> cmd -> netstat -ano
					2. taskkill /f /pid pid번호						ex] tskkill /f /pid 33464(확인된번호)
		3. HTTP :
			1. 체계 : http://ip:port 		, ip 와 port 사이에 : (콜론) 넣어서 구분
		4. HTTPS
		5. SMTP
		6. FTP
		7. DNS
		8. SSL


[ HTTP ] HyperText Transfer Protocol
	- 문자 이동 프로토콜 : 객체지향 아니므로 문자 자료만 통신이 가능하다.
	1. 정의 : 웹 에서 사용하는 문자 통신 규약
	2. 특징
		1. 무상태 프로로콜 ( 상태 없고 -> 저장기능 없다 )
		2. 독립적 , 이전 요청 과 다음 요청은 다르다
		3. TCP/IP 프로토콜의 종속되어 동작 PORT 80/8080 사용한다.
			http://ip:port
	3. 주소 체계
		URL : 웹 주소 , 네트워크 상의 자료가 어디에 있는지 위치를 표시하는 규약
			http://ip:port/자료위치
			https://nid.naver.com/nidlogin.login : 네이버의 login(html) 이 위치한 주소
		URI : 각종 자료들의 유일한 이름이나 위치를 표시하는 규약 , URL + 매개변수명 = 값
			http://ip/port/자료위치?매개변수1=값1&매개변수2=값2
			https://finance.naver.com/item/main.naver?code=005930
			(URL) https://finance.naver.com/item/main.naver
			(URI) https://finance.naver.com/item/main.naver?code=005930

	4. HTTP Header ( HTTP 통신 정보/내용가 들어있는 곳  )
		[ 주요 ]
		1. HTTP ***METHOD*** : HTTP 이용한 통신 요청할 때 분류 하는 규칙
			* 과거에는 GET 방식으로 만 통신 했지만 현재는 다양한 방식을 제공한다.
		2. HTTP ***BODY*** : HTTP 이용하여 데이터의 내용/본문 보낼때 사용되는 규칙
		3. HTTP Content-Type : HTTP 이용한 데이터의 타입 정보
		4. HTTP HOST : HTTP 이용한 통신 요청하는 서버의 URL 주소

	5. HTTP METHOD 종류 	  CRUD			HTTP기반의 연결(매핑)구축(RESTFUL)	HttpServlet
		1. get 			: Read			get매핑							doGet()
		2. post			: Create		post매핑							doPost()
		3. put 			: Update		put매핑							doPut()
		4. delete 		: Delete		delete패핑						doDelete()

	6. HTTP 사용처 :
		1. (사용자) 브라우저( 크롬,엣지,사파리 등등) 상단에 HTTP 입력한다. 브라우저 상단 주소 입력창은 GET 방식 이다.
		2. (개발자) Talend Api ( restful test )
			[설치]
			1. (크롬) 구글 에서 'talend api' 검색 , https://chromewebstore.google.com/detail/talend-api-tester-free-ed/aejoelaoggembcahagimdiliamlcdmfm?hl=ko
			2. [크롬에 추가] 클릭
			3. [ 확장 프로그앰에 추가 ] 클릭
			[사용]
			크롬 주소 입력창 오른쪽 끝에 *확장프로그램[아이콘] 클릭
		3. ( JS ) fetch, ajax(JQUERY) , axios(REACT) 등등 : JS가 제공하는 HTTP 통신 라이브러리

	6. HTTP 가 데이터를 보내는 방법
		* 우체국에 편지(통신) 보낸다. 편지봉투( 보낸사람,받는사람 = url / queryString ), 편지지( 내용물 = body )
		방법1. 쿼리스트링
			1. 정의 : url 주소상의 '?'물음표 구분하여 매개변수명 = 값 표시하고 여러개 일경우 '&'(엔퍼센트) 구분한다.
			2. 요청 : GET , POST , PUT , DELETE 메소드 에서 사용 가능. ( 보안상 좋지 않다. )
				예1]
				https://finance.naver.com/item/main.naver?code=005930
				(URL) https://finance.naver.com/item/main.naver
				(쿼리스트링) ?code=005930
					매개변수명은 code
					매개변수값은 005930
				예2]
				https://www.leelin.co.kr/shop/shopdetail.html?branduid=1168891&xcode=028
				(URL)https://www.leelin.co.kr/shop/shopdetail.html
				(쿼리스트링)
					매개변수명 : branduid ,	xcode
					매개변수값 : 1168891  ,	028

		방법2. HTTP header(정보) body
			1. 정의 : HTTP 요청 과 응답 내용 자체를 전달하는 역할
			2. 요청 : POST, PUT 메소드 지원/권장, ( 보안상 좋다. )
				1. content-type
			3. 응답 :
				1. HTTP 상태 메시지( 2XX:성공 , 4XX:프로토콜문제 , 5XX:서버문제 )
			 	2. content-type

 	7. HTTP Content-Type
 		1. 정의 : HTTP 의 요청 과 응답의 본문 데이터 형식 을 나타내는 HTTP header 정보 중 하나.
 		2. 목적 : 서버와 클라이언트가 데이터를 주고 받는데 있어서 형식 명시/표시 한다.
 		3. 주의 : HTTP는 기본적으로 문자열 자료만 가능하다.
 		4. 타입 종류 :
 			1. text/html							: html 문서
 			2. text/plain							: 일반 텍스트 데이터
 			3. application/json						: JSON 데이터
 			4. application/xml						: xml 데이터
 			5. application/x-www-form-urlencoded	: 폼 형식의 데이터 , html의 <form> 마크업
 			6. multipart/form-data					: 첨부파일 업로드 , 대용량 데이터(바이트)

 		* JAVA / JS / PYTHON 아래와 같이 다양한 타입 지원한다.
 			"3"	, 자료/값 = 3 , 자료타입/분류/타입 = 문자열
 			3	, 자료/값 = 3 , 자료타입/분류/타입 = 정수

	* 주 웹/앱 개발의 통신 구조 , 서로 다른 언어들간의 주고 받은 방법
		* 타입변환 : 서로 다른 언어들간 통신할때 타입변환이 필요한 이유 : 각 언어들은 서로 다른 타입들을 지원하기 때문에
		HTML -- document.querySelector() --> JS -- HTTP --> JAVA(서블릿) -- JDBC --> DB
		1. html 과 JS 자료를 이동간
			html --> js : document.querySelector().value
			js --> html : document.querySelector().innerHTML
			* paseInt( ) 등 타입변환이 필요했다.

		2. JS 와 JAVA 자료를 이동간
			JS --> JAVA : HTTP 이용한 , 요청 request
			JAVA --> JS : HTTP 이용한 , 응답 response
			* Integer.parseInt( ) 등 타입변환이 필요했다.
			* 두 언어간 웹에서 자주 사용되는 통신 데이터타입 : application/json
			* JSON( JavaScript Object Notation ) , JS언어는 JSON 타입을 알지만 JAVA언어는 JSON 타입 모른다.

		3. JAVA 와 DB 자료를 이동간 : DAO(JDBC)

























